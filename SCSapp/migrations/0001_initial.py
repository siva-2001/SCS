<<<<<<< HEAD
# Generated by Django 4.0.3 on 2022-10-31 09:56
=======
# Generated by Django 4.0.3 on 2022-10-23 12:39
>>>>>>> absMatch

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AbstractEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('AN', 'Анонсированное'), ('CR', 'Текущее'), ('P', 'Прошедшее')], default='AN', max_length=2, verbose_name='Статус')),
                ('type', models.CharField(choices=[('INT', 'Внутреннее'), ('IC', 'Межвузовское')], default='IC', max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='AbstractMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isAnnounced', models.BooleanField(default=True)),
                ('matchDateTime', models.DateTimeField(null=True)),
                ('place', models.CharField(blank=True, max_length=128, null=True)),
                ('protocol', models.FileField(blank=True, default=None, null=True, upload_to='media/protocols/match')),
            ],
            options={
                'verbose_name': 'Матч',
                'verbose_name_plural': 'Матчи',
            },
        ),
        migrations.CreateModel(
            name='AbstractMatchTeamResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teamScore', models.IntegerField(default=None, null=True)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SCSapp.abstractmatch')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='VolleyballMatchTeamResult',
            fields=[
                ('abstractmatchteamresult_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='SCSapp.abstractmatchteamresult')),
                ('firstRoundScore', models.IntegerField(default=None, null=True)),
                ('secondRoundScore', models.IntegerField(default=None, null=True)),
                ('thirdRoundScore', models.IntegerField(default=None, null=True)),
            ],
            bases=('SCSapp.abstractmatchteamresult',),
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Имя')),
                ('surename', models.CharField(max_length=32, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=32, null=True, verbose_name='Отчество')),
                ('age', models.IntegerField(verbose_name='Возраст')),
                ('height', models.IntegerField(verbose_name='Рост')),
                ('weight', models.IntegerField(verbose_name='Вес')),
                ('trainer', models.BooleanField(verbose_name='Тренер')),
            ],
            options={
                'verbose_name': 'Игрок',
                'verbose_name_plural': 'Игроки',
                'ordering': ['surename', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('abstractevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='SCSapp.abstractevent')),
                ('sportType', models.CharField(choices=[('BB', 'Баскетбол'), ('VB', 'Волейбол')], default='VB', max_length=128, verbose_name='Тип спорта')),
                ('name', models.CharField(max_length=256, null=True, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('dateTimeStartCompetition', models.DateTimeField(default=None, null=True, verbose_name='Заявки на участие принимаются до')),
                ('dateTimeFinishCompetition', models.DateTimeField(blank=True, null=True, verbose_name='Соревнование завершилось')),
                ('protocol', models.FileField(blank=True, null=True, upload_to='protocols', verbose_name='Протокол')),
                ('regulations', models.FileField(blank=True, null=True, upload_to='regulations', verbose_name='Регламент соревнований')),
                ('isHighLevelSportEvent', models.BooleanField(default=True)),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Организатор')),
            ],
            options={
                'verbose_name': 'Соревнование',
                'verbose_name_plural': 'Соревнования',
            },
            bases=('SCSapp.abstractevent',),
        ),
        migrations.CreateModel(
            name='VolleyballTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Название')),
                ('registratedTime', models.DateTimeField(auto_now_add=True, verbose_name='Время регистрации')),
                ('discription', models.TextField(blank=True, verbose_name='Описание')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SCSapp.competition', verbose_name='Соревнования')),
            ],
            options={
                'verbose_name': 'Команда',
                'verbose_name_plural': 'Команды',
            },
        ),
        migrations.CreateModel(
            name='Olympics',
            fields=[
                ('abstractevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='SCSapp.abstractevent')),
                ('name', models.CharField(max_length=255, verbose_name='Название спартакиады')),
                ('description', models.CharField(max_length=255, verbose_name='Описание спартакиады')),
                ('dateTimeStartOlympics', models.DateField(verbose_name='Дата начала спартакиады')),
                ('dateTimeFinishOlympics', models.DateField(auto_now_add=True, verbose_name='Дата конца спартакиады')),
                ('protocol', models.FileField(blank=True, null=True, upload_to='protocols', verbose_name='Протокол')),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Организатор')),
            ],
            bases=('SCSapp.abstractevent',),
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('matchDateTime', models.DateTimeField(default=None, null=True)),
                ('firstTeamScore', models.IntegerField(default=0)),
                ('secondTeamScore', models.IntegerField(default=0)),
                ('place', models.CharField(blank=True, max_length=128, null=True)),
                ('status_isCompleted', models.BooleanField(default=False)),
                ('protocol', models.FileField(blank=True, null=True, upload_to='match_protocols')),
                ('firstTeam', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='first_team', to='SCSapp.volleyballteam')),
                ('nextMatch', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='SCSapp.match')),
                ('secondTeam', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='second_team', to='SCSapp.volleyballteam')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SCSapp.competition')),
            ],
            options={
                'verbose_name': 'Матч',
                'verbose_name_plural': 'Матчи',
            },
=======
            name='Competition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, null=True, verbose_name='Заголовок')),
                ('status', models.CharField(choices=[('AN', 'Анонсированное'), ('CR', 'Текущее'), ('P', 'Прошедшее')], default='AN', max_length=2, verbose_name='Статус')),
                ('sportType', models.CharField(choices=[('BB', 'Баскетбол'), ('VB', 'Волейбол')], default='VB', max_length=128, verbose_name='Тип спорта')),
                ('type', models.CharField(choices=[('INT', 'Внутреннее'), ('IC', 'Межвузовское')], default='IC', max_length=3)),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('dateStartCompetition', models.DateField(default=None, null=True, verbose_name='Заявки на участие принимаются до')),
                ('dateFinishCompetition', models.DateField(blank=True, null=True, verbose_name='Соревнование завершилось')),
                ('protocol', models.FileField(blank=True, null=True, upload_to='protocols', verbose_name='Протокол')),
                ('regulations', models.FileField(blank=True, null=True, upload_to='regulations', verbose_name='Регламент соревнований')),
                ('isHightLevelSportEvent', models.BooleanField(default=True)),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Организатор')),
            ],
            options={
                'verbose_name': 'Соревнование',
                'verbose_name_plural': 'Соревнования',
            },
        ),
        migrations.AddField(
            model_name='abstractmatchteamresult',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SCSapp.team'),
        ),
        migrations.AddField(
            model_name='abstractmatch',
            name='competition',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='SCSapp.competition'),
        ),
        migrations.AddField(
            model_name='abstractmatch',
            name='judge',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
>>>>>>> absMatch
        ),
    ]
